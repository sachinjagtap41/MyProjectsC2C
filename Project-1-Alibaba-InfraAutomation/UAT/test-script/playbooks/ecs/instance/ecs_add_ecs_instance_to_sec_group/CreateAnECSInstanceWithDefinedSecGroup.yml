#Ansible Module Name - ECS
#Test Case : Create a New ECS Instance and Add Defined Security Group 
#Ansible Playbook created by - Jogesh N


- name: Create a New ECS Instance and Add Defined Security Group 
  hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - ../vars/test-environment.yml
    - ../vars/general-parameters.yml
    - ../../../vars/alicloud-creds.yml

  tasks:
   - block: 
     - name: Create a New ECS Instance and Add Defined Security Group 
       ecs:
        acs_access_key: '{{ aliyun_acs_access_key }}'
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
        region: '{{ region }}'
        zone: '{{ zone }}'
        image_id: '{{ windowsImageId }}'
        instance_type: '{{ instanceType }}'
        group_id: '{{ sgGroupId}}'
        instance_name: '{{ sgName }}'
        description: '{{ description }}'
        host_name: Administrator
        password: Admin123
        internet_data:
           charge_type: PayByTraffic
           max_bandwidth_in:  200
           max_bandwidth_out: 0
        system_disk:
           disk_category: cloud
           disk_size: 50
        volumes:
          -  device_category: cloud
             device_size: 20
             device_name: volume1
             device_description: volume 1 description comes here
          -  device_category: cloud
             device_size: 20
             device_name: volume2
             device_description: volume 2 description comes here

        instance_tags:
        - tag_key: create_test_1
          tag_value: '0.01'
        - tag_key: create_test_2
          tag_value: '0.02'
        - tag_key: create_test_3
          tag_value: '0.03'
     #   state: '{{ state }}'       
     
       register: result
     - debug: var=result
     
     rescue:
     - fail:
        msg: "The fail block is added just to handle exception. This block won't be executed ever."
        when: no
     
   - block:
     - name: Adding a VALID Security Group To Existing VALID ECS Instance
       ecs:
        acs_access_key: '{{ aliyun_acs_access_key }}'
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
        region: '{{ region }}'
        zone: '{{ zone }}'
        group_id: '{{ addSgGroupId }}' # VALID Security Group
        instance_ids: '{{ result.result[0].instance_id }}'# VALID ECS Instance Id
        sg_action: '{{ sgJoin }}' 
        
       register: result4
     - debug: var=result4    
  
     rescue:
     - fail:
        msg: "The fail block is added just to handle exception. This block won't be executed ever."
        when: no
    
   - block: 
     - name: Remove a Security Group From Existing ECS Instance
       ecs:
        acs_access_key: '{{ aliyun_acs_access_key }}'
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
        region: '{{ region }}'
        zone: '{{ zone }}'
        group_id: '{{ sgGroup }}'
        instance_ids: '{{ result.result[0].instance_id }}'
        sg_action: leave
    
       register: result1
     - debug: var=result1
   
     rescue:
     - fail:
        msg: "The fail block is added just to handle exception. This block won't be executed ever."
        when: no
    
     
   - pause:
        seconds: 10     
        
    
     
  post_tasks:
  - block: 
    - name: Deleting newly created instance
      ecs: 
       acs_access_key: '{{ aliyun_acs_access_key }}'
       acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
       region: '{{ region }}'
       instance_id: '{{ result.result[0].instance_id }}'
       status: absent
       
    rescue:
     - fail:
        msg: "The fail block is added just to handle exception. This block won't be executed ever."
        when: no  
        
    when:
      - "result.changed ==  True" 
    
    always:
     - assert:
        that: 
           - "'failed' not in result"
          # - "'region is required' in Scenario1.msg"