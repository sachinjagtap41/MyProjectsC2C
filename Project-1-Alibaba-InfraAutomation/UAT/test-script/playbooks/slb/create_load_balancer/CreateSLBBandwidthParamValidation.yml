#Ansible Module Name -- ecs_slb_lb.py
#Test Case : Validating Bandwidth Parmeter while creating SLB
#Ansible Playbook created by - Abha H
---
- name: Validating Bandwidth Parmeter while creating SLB
  hosts: localhost
  connection: local
  vars_files:
     - ../../vars/alicloud-creds.yml
     - ../vars/test-environment.yml
     - ../vars/general-parameters.yml
   
  tasks:
   # Task 1 : Validating Invalid Bandwidth
   - block:
     - name: Scenario 1 - Validating Invalid Bandwidth
       ecs_slb_lb:
        acs_access_key: '{{ aliyun_acs_access_key }}'
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
        region: '{{ region }}'
        status: '{{ status }}'
        #master_zone_id: '{{ masterZone }}'
        #slave_zone_id: '{{ slaveZone }}'
        bandwidth: '{{ bandwidthInvalid }}'
        scheme: '{{ scheme }}'
        internet_charge_type: '{{ internetChargeType }}'
        wait: '{{ wait }}'
        wait_timeout: '{{ waitTimeout }}'

       register: create_slb_result_scn1
     - debug: var=create_slb_result_scn1

     rescue:
        - fail:
            msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no

   # Task 2 : Validating Bandwidth by keeping blank
   - pause:
       seconds: 20
   - block:
     - name: Scenario 2 - Validating Bandwidth by keeping blank
       ecs_slb_lb:
        acs_access_key: '{{ aliyun_acs_access_key }}'
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
        region: '{{ region }}'
        status: '{{ status }}'
        #master_zone_id: '{{ masterZone }}'
        #slave_zone_id: '{{ slaveZone }}'
        bandwidth: '{{ bandwidthBlank }}'
        scheme: '{{ scheme }}'
        internet_charge_type: '{{ internetChargeType }}'
        wait: '{{ wait }}'
        wait_timeout: '{{ waitTimeout }}'

       register: create_slb_result_scn2
     - debug: var=create_slb_result_scn2

     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no


   # Task 3 : Validating Bandwidth with more than allowed range
   - block:
      - name: Scenario 3 - Validating Bandwidth with more than allowed range
        ecs_slb_lb:
         acs_access_key: '{{ aliyun_acs_access_key }}'
         acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
         region: '{{ region }}'
         status: '{{ status }}'
         #master_zone_id: '{{ masterZone }}'
         #slave_zone_id: '{{ slaveZone }}'
         bandwidth: '{{ bandwidthMoreThan1000 }}'
         scheme: '{{ scheme }}'
         internet_charge_type: '{{ internetChargeType }}'
         wait: '{{ wait }}'
         wait_timeout: '{{ waitTimeout }}'

        register: create_slb_result_scn3
      - debug: var=create_slb_result_scn3

     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no

   # Task 4 : Validating bandwidth as Bandwidth
   - block:
      - name: Scenario 4 - Validating bandwidth as Bandwidth
        ecs_slb_lb:
          acs_access_key: '{{ aliyun_acs_access_key }}'
          acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
          region: '{{ region }}'
          status: '{{ status }}'
          #master_zone_id: '{{ masterZone }}'
          #slave_zone_id: '{{ slaveZone }}'
          Bandwidth: '{{ bandwidth }}'
          scheme: '{{ scheme }}'
          internet_charge_type: '{{ internetChargeType }}'
          wait: '{{ wait }}'
          wait_timeout: '{{ waitTimeout }}'

        register: create_slb_result_scn4
      - debug: var=create_slb_result_scn4

     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no

     always:
      - assert:  
         that:
            - "'failed' in create_slb_result_scn1"
            -  "'argument bandwidth is of type' in create_slb_result_scn1.msg"

            - "'failed' not in create_slb_result_scn2"

            - "'failed' in create_slb_result_scn3"
            -  "'The specified parameter \"Bandwidth\" is not valid.' in create_slb_result_scn3.msg[0]['Error Message']"

            - "'failed' in create_slb_result_scn4"
            -  "'unsupported parameter for module: Bandwidth' in create_slb_result_scn4.msg"
         msg: 'Test pass FAILED !!!'
         
   - pause:
       seconds: 20

  post_tasks:
    - name: Delete load balancer with all parameters
      ecs_slb_lb:
       acs_access_key: '{{ aliyun_acs_access_key }}'
       acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
       region: '{{ region }}'
       status: absent
       load_balancer_id: '{{ create_slb_result_scn2.result[0].LoadBalancerId }}'
      when:
        - "'failed' not in create_slb_result_scn2"