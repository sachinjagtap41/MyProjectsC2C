#Ansible Module Name -- ecs_slb_vsg.py
#Test Case : Create Vserver Group
#Ansible Playbook created by - Sachin J

---
- name: Validating create vserver group with name parameter validation
  hosts: localhost
  connection: local
  vars_files:
    - ../vars/test-environment.yml
    - ../vars/general-parameters.yml
    - ../../vars/alicloud-creds.yml
     
  tasks:
   # Task : 1 Create vserver group by providing vservergroup name parameter
   - block:
     - name: Scenario 1 - Create vserver group by providing vservergroup name parameter
       ecs_slb_vsg:
        acs_access_key: '{{ aliyun_acs_access_key }}'
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
        region: '{{ region }}'
        load_balancer_id: '{{ loadBalancerId }}'
        vserver_group_name: '{{ vserverGroupName }}'
        backend_servers: '{{ backendServersForVserverGrp }}'
        status: '{{ status }}'
        
       register: create_vsg_result_scn1
     - debug: var=create_vsg_result_scn1

     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no

   # Task : 2  Create vserver group by providing vservergroup name with more than 256 char
   - block:
     - name: Scenario 2 - Create vserver group by providing vservergroup name with more than 256 char
       ecs_slb_vsg: 
        acs_access_key: '{{ aliyun_acs_access_key }}'            
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'  
        region: '{{ region }}'
        load_balancer_id: '{{ loadBalancerId }}'
        vserver_group_name: '{{ vserverGroupNameInvalid }}'
        backend_servers: '{{ backendServersForVserverGrp }}'
        status: '{{ status }}'
        
       register: create_vsg_result_scn2
     - debug: var=create_vsg_result_scn2
    
     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no

   # Task : 3  Create vserver group by providing vservergroup name with special charcters
   - block:
     - name: Scenario 3 - Create vserver group by providing vservergroup name with special charcters
       ecs_slb_vsg: 
        acs_access_key: '{{ aliyun_acs_access_key }}'            
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'  
        region: '{{ region }}'
        load_balancer_id: '{{ loadBalancerId }}'
        vserver_group_name: '{{ vserverGroupNameSpecailChar }}'
        backend_servers: '{{ backendServersForVserverGrp }}'
        status: '{{ status }}'
        
       register: create_vsg_result_scn3
     - debug: var=create_vsg_result_scn3
    
     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no

   # Task : 4 Create vserver group by providing vservergroup name with Alphanumeric charcters
   - block:
     - name: Scenario 4 - Create vserver group by providing vservergroup name with Alphanumeric charcters
       ecs_slb_vsg: 
        acs_access_key: '{{ aliyun_acs_access_key }}'            
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'  
        region: '{{ region }}'
        load_balancer_id: '{{ loadBalancerId }}'
        vserver_group_name: '{{ vserverGroupNameAlphanumeric }}'
        backend_servers: '{{ backendServersForVserverGrp }}'
        status: '{{ status }}'
        
       register: create_vsg_result_scn4
     - debug: var=create_vsg_result_scn4
    
     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no
    
   # Task : 5 Create vserver group without vservergroup name parameter
   - block: 
     - name: Scenario 5 - Create vserver group without vservergroup name parameter
       ecs_slb_vsg: 
        acs_access_key: '{{ aliyun_acs_access_key }}'            
        acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'  
        region: '{{ region }}'
        load_balancer_id: '{{ loadBalancerId }}'
        #vserver_group_name: '{{ vserverGroupNameHttps }}'
        backend_servers: '{{ backendServersForVserverGrp }}'
        status: '{{ status }}'
        
       register: create_vsg_result_scn5
     - debug: var=create_vsg_result_scn5
    
     rescue:
        - fail:
           msg: "The fail block is added just to handle exception. This block won't be executed ever."
          when: no

     always:
      - assert:
         that:
            - "'failed' not in create_vsg_result_scn1"

            - "'failed' in create_vsg_result_scn2"

            - "'failed' not in create_vsg_result_scn3"

            - "'failed' not in create_vsg_result_scn4"

            - "'failed' in create_vsg_result_scn5"

         msg: 'Test pass FAILED !!!'

  post_tasks:
   - name: Deleting newly created vserver group by scenario 1
     ecs_slb_vsg:
      acs_access_key: '{{ aliyun_acs_access_key }}'
      acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
      region: '{{ region }}'
      vserver_group_id: '{{ create_vsg_result_scn1.result["VServerGroupId"] }}'
      load_balancer_id: '{{ loadBalancerId }}'
      state: absent
     when:
      - "create_vsg_result_scn1.changed ==  True"

   - name: Deleting newly created vserver group by scenario 3
     ecs_slb_vsg:
      acs_access_key: '{{ aliyun_acs_access_key }}'
      acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
      region: '{{ region }}'
      vserver_group_id: '{{ create_vsg_result_scn3.result["VServerGroupId"] }}'
      load_balancer_id: '{{ loadBalancerId }}'
      state: absent
     when:
      - "create_vsg_result_scn3.changed ==  True"

   - name: Deleting newly created vserver group by scenario 4
     ecs_slb_vsg:
      acs_access_key: '{{ aliyun_acs_access_key }}'
      acs_secret_access_key: '{{ aliyun_acs_secret_access_key }}'
      region: '{{ region }}'
      vserver_group_id: '{{ create_vsg_result_scn4.result["VServerGroupId"] }}'
      load_balancer_id: '{{ loadBalancerId }}'
      state: absent
     when:
      - "create_vsg_result_scn4.changed ==  True"
    

    
    
    
